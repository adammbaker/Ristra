# Generated by Django 3.1.7 on 2021-02-26 23:04

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_cryptography.fields
import hashid_field.field
import intake.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Asylee',
            fields=[
                ('id', hashid_field.field.HashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', min_length=7, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=300, verbose_name="Asylee's name")),
                ('a_number', models.CharField(default='A-', max_length=20, verbose_name='Alien number')),
                ('sex', models.CharField(choices=[('female', 'Female'), ('male', 'Male'), ('other', 'Other')], default='other', max_length=100, verbose_name='Sex of asylee')),
                ('date_of_birth', models.DateField(help_text='YYYY-MM-DD', verbose_name="Asylee's date of birth")),
                ('phone_number', models.CharField(max_length=300, null=True, verbose_name="Asylee's phone number")),
                ('had_covid_disease', models.BooleanField(default=False, verbose_name='Has had COVID disease')),
                ('had_covid_vaccine', models.BooleanField(default=False, verbose_name='Has received the COVID vaccine')),
                ('covid_vaccine_doses', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2)], verbose_name='COVID vaccine doses received')),
                ('vaccine_received', models.CharField(choices=[('pfizer', 'Pfizer'), ('moderna', 'Moderna'), ('j_and_j', 'Johnson & Johnson'), ('astra_zeneca', 'AstraZeneca'), ('unknown', 'Unknown'), ('other', 'Other')], max_length=100, null=True, verbose_name='Vaccine manufacturer')),
                ('sick_covid', models.BooleanField(default=False, verbose_name='Is currently sick from COVID')),
                ('sick_other', models.BooleanField(default=False, verbose_name='Is currently sick but not from COVID')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Additional notes')),
            ],
            options={
                'ordering': ['date_of_birth'],
            },
        ),
        migrations.CreateModel(
            name='Capacity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Capacity')),
            ],
        ),
        migrations.CreateModel(
            name='IntakeBus',
            fields=[
                ('id', hashid_field.field.HashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', min_length=7, primary_key=True, serialize=False)),
                ('origin', models.CharField(max_length=300, verbose_name='City of origin of the bus')),
                ('state', models.CharField(choices=[('al', 'Alabama'), ('ak', 'Alaska'), ('az', 'Arizona'), ('ar', 'Arkansas'), ('ca', 'California'), ('co', 'Colorado'), ('ct', 'Connecticut'), ('de', 'Delaware'), ('dc', 'Washington D.C.'), ('fl', 'Florida'), ('ga', 'Georgia'), ('hi', 'Hawaii'), ('id', 'Idaho'), ('il', 'Illinois'), ('in', 'Indiana'), ('ia', 'Iowa'), ('ks', 'Kansas'), ('ky', 'Kentucky'), ('la', 'Louisiana'), ('me', 'Maine'), ('md', 'Maryland'), ('ma', 'Massachusetts'), ('mi', 'Michigan'), ('mn', 'Minnesota'), ('ms', 'Mississippi'), ('mo', 'Missouri'), ('mt', 'Montana'), ('ne', 'Nebraska'), ('nv', 'Nevada'), ('nh', 'New Hampshire'), ('nj', 'New Jersey'), ('nm', 'New Mexico'), ('ny', 'New York'), ('nc', 'North Carolina'), ('nd', 'North Dakota'), ('oh', 'Ohio'), ('ok', 'Oklahoma'), ('or', 'Oregon'), ('pa', 'Pennsylvania'), ('pr', 'Puerto Rico'), ('ri', 'Rhode Island'), ('sc', 'South Carolina'), ('sd', 'South Dakota'), ('tn', 'Tennessee'), ('tx', 'Texas'), ('ut', 'Utah'), ('vt', 'Vermont'), ('va', 'Virginia'), ('wa', 'Washington State'), ('wv', 'West Virginia'), ('wi', 'Wisconsin'), ('wy', 'Wyoming'), ('other', 'Other')], default='other', max_length=100, verbose_name='State of origin of the bus')),
                ('arrival_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Arrival time of bus')),
                ('number', models.CharField(blank=True, max_length=300, null=True, verbose_name='Descriptive bus name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Additional notes')),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=100, verbose_name='Language Spoken')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', hashid_field.field.HashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', min_length=7, primary_key=True, serialize=False)),
                ('lodging_type', models.CharField(choices=[('dormitory', 'Dormitory'), ('hotel', 'Hotel'), ('motel', 'Motel'), ('other', 'Other')], default='other', max_length=100, verbose_name='Type of lodging provided')),
                ('name', models.CharField(max_length=300, verbose_name='Name of the staging location')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Additional notes')),
                ('intakebuses', models.ManyToManyField(to='intake.IntakeBus', verbose_name='Intake Buses')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=1000)),
                ('dismissible', models.BooleanField(default=True)),
                ('message_type', models.CharField(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Success'), ('danger', 'Danger'), ('warning', 'Warning'), ('info', 'Info'), ('light', 'Light'), ('dark', 'Dark')], max_length=100, verbose_name='Message')),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', hashid_field.field.HashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', min_length=7, primary_key=True, serialize=False)),
                ('is_valid', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=500, unique=True, verbose_name='Name of the organization')),
                ('city', models.CharField(max_length=500, null=True, verbose_name='City')),
                ('state', models.CharField(choices=[('al', 'Alabama'), ('ak', 'Alaska'), ('az', 'Arizona'), ('ar', 'Arkansas'), ('ca', 'California'), ('co', 'Colorado'), ('ct', 'Connecticut'), ('de', 'Delaware'), ('dc', 'Washington D.C.'), ('fl', 'Florida'), ('ga', 'Georgia'), ('hi', 'Hawaii'), ('id', 'Idaho'), ('il', 'Illinois'), ('in', 'Indiana'), ('ia', 'Iowa'), ('ks', 'Kansas'), ('ky', 'Kentucky'), ('la', 'Louisiana'), ('me', 'Maine'), ('md', 'Maryland'), ('ma', 'Massachusetts'), ('mi', 'Michigan'), ('mn', 'Minnesota'), ('ms', 'Mississippi'), ('mo', 'Missouri'), ('mt', 'Montana'), ('ne', 'Nebraska'), ('nv', 'Nevada'), ('nh', 'New Hampshire'), ('nj', 'New Jersey'), ('nm', 'New Mexico'), ('ny', 'New York'), ('nc', 'North Carolina'), ('nd', 'North Dakota'), ('oh', 'Ohio'), ('ok', 'Oklahoma'), ('or', 'Oregon'), ('pa', 'Pennsylvania'), ('pr', 'Puerto Rico'), ('ri', 'Rhode Island'), ('sc', 'South Carolina'), ('sd', 'South Dakota'), ('tn', 'Tennessee'), ('tx', 'Texas'), ('ut', 'Utah'), ('vt', 'Vermont'), ('va', 'Virginia'), ('wa', 'Washington State'), ('wv', 'West Virginia'), ('wi', 'Wisconsin'), ('wy', 'Wyoming'), ('other', 'Other')], default='nm', max_length=100, verbose_name='State')),
                ('url', models.CharField(max_length=500, null=True, verbose_name='Website')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Additional notes')),
                ('locations', models.ManyToManyField(to='intake.Location', verbose_name='Locations')),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Organizations',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=50, null=True)),
                ('email_confirmed', models.BooleanField(default=False)),
                ('phone_number', models.CharField(max_length=300, verbose_name='Your phone number')),
                ('can_create_organization', models.BooleanField(default=False, verbose_name='Able to create organizations')),
                ('notes', models.TextField(blank=True, help_text='Additional notes', null=True)),
                ('affiliation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='intake.organization', verbose_name='Affiliated Organization')),
                ('capacities', models.ManyToManyField(to='intake.Capacity', verbose_name='Capacities')),
                ('languages', models.ManyToManyField(to='intake.Language', verbose_name='Languages Spoken')),
                ('organizations_created', models.ManyToManyField(related_name='organizations_created', to='intake.Organization', verbose_name='Organizations created')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('id', hashid_field.field.HashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', min_length=7, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=300, unique=True, verbose_name="Sponsor's name")),
                ('phone_number', models.CharField(max_length=300, null=True, verbose_name="Sponsor's phone #")),
                ('address', models.CharField(max_length=300, null=True, verbose_name="Sponsor's address")),
                ('city', models.CharField(max_length=300, null=True, verbose_name="Sponsor's city")),
                ('state', models.CharField(choices=[('al', 'Alabama'), ('ak', 'Alaska'), ('az', 'Arizona'), ('ar', 'Arkansas'), ('ca', 'California'), ('co', 'Colorado'), ('ct', 'Connecticut'), ('de', 'Delaware'), ('dc', 'Washington D.C.'), ('fl', 'Florida'), ('ga', 'Georgia'), ('hi', 'Hawaii'), ('id', 'Idaho'), ('il', 'Illinois'), ('in', 'Indiana'), ('ia', 'Iowa'), ('ks', 'Kansas'), ('ky', 'Kentucky'), ('la', 'Louisiana'), ('me', 'Maine'), ('md', 'Maryland'), ('ma', 'Massachusetts'), ('mi', 'Michigan'), ('mn', 'Minnesota'), ('ms', 'Mississippi'), ('mo', 'Missouri'), ('mt', 'Montana'), ('ne', 'Nebraska'), ('nv', 'Nevada'), ('nh', 'New Hampshire'), ('nj', 'New Jersey'), ('nm', 'New Mexico'), ('ny', 'New York'), ('nc', 'North Carolina'), ('nd', 'North Dakota'), ('oh', 'Ohio'), ('ok', 'Oklahoma'), ('or', 'Oregon'), ('pa', 'Pennsylvania'), ('pr', 'Puerto Rico'), ('ri', 'Rhode Island'), ('sc', 'South Carolina'), ('sd', 'South Dakota'), ('tn', 'Tennessee'), ('tx', 'Texas'), ('ut', 'Utah'), ('vt', 'Vermont'), ('va', 'Virginia'), ('wa', 'Washington State'), ('wv', 'West Virginia'), ('wi', 'Wisconsin'), ('wy', 'Wyoming'), ('other', 'Other')], default='other', max_length=100, verbose_name="Sponsor's state")),
                ('relation', models.CharField(max_length=300, null=True, verbose_name='Relation to head of household')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Additional notes')),
            ],
        ),
        migrations.CreateModel(
            name='HeadOfHousehold',
            fields=[
                ('asylee_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='intake.asylee')),
                ('lodging', models.CharField(max_length=300, null=True, verbose_name='Room assignment')),
                ('destination_city', models.CharField(max_length=300, null=True, verbose_name='Destination city')),
                ('state', models.CharField(choices=[('al', 'Alabama'), ('ak', 'Alaska'), ('az', 'Arizona'), ('ar', 'Arkansas'), ('ca', 'California'), ('co', 'Colorado'), ('ct', 'Connecticut'), ('de', 'Delaware'), ('dc', 'Washington D.C.'), ('fl', 'Florida'), ('ga', 'Georgia'), ('hi', 'Hawaii'), ('id', 'Idaho'), ('il', 'Illinois'), ('in', 'Indiana'), ('ia', 'Iowa'), ('ks', 'Kansas'), ('ky', 'Kentucky'), ('la', 'Louisiana'), ('me', 'Maine'), ('md', 'Maryland'), ('ma', 'Massachusetts'), ('mi', 'Michigan'), ('mn', 'Minnesota'), ('ms', 'Mississippi'), ('mo', 'Missouri'), ('mt', 'Montana'), ('ne', 'Nebraska'), ('nv', 'Nevada'), ('nh', 'New Hampshire'), ('nj', 'New Jersey'), ('nm', 'New Mexico'), ('ny', 'New York'), ('nc', 'North Carolina'), ('nd', 'North Dakota'), ('oh', 'Ohio'), ('ok', 'Oklahoma'), ('or', 'Oregon'), ('pa', 'Pennsylvania'), ('pr', 'Puerto Rico'), ('ri', 'Rhode Island'), ('sc', 'South Carolina'), ('sd', 'South Dakota'), ('tn', 'Tennessee'), ('tx', 'Texas'), ('ut', 'Utah'), ('vt', 'Vermont'), ('va', 'Virginia'), ('wa', 'Washington State'), ('wv', 'West Virginia'), ('wi', 'Wisconsin'), ('wy', 'Wyoming'), ('other', 'Other')], default='other', max_length=100, verbose_name='Destination state')),
                ('days_traveling', models.PositiveSmallIntegerField(default=0, verbose_name='Days spent traveling')),
                ('days_detained', models.PositiveSmallIntegerField(default=0, verbose_name='Days spent in detention')),
                ('country_of_origin', models.CharField(choices=[('The Americas', (('guatemala', 'Guatemala'), ('honduras', 'Honduras'), ('elsalvador', 'El Salvador'), ('mexico', 'Mexico'), ('argentina', 'Argentina'), ('bolivia', 'Bolivia'), ('brazil', 'Brazil'), ('chile', 'Chile'), ('colombia', 'Colombia'), ('costarica', 'Costa Rica'), ('cuba', 'Cuba'), ('dominicanrepublic', 'Dominican Republic'), ('ecuador', 'Ecuador'), ('frenchguiana', 'French Guiana'), ('guadeloupe', 'Guadeloupe'), ('haiti', 'Haiti'), ('martinique', 'Martinique'), ('mexico', 'Mexico'), ('nicaragua', 'Nicaragua'), ('panama', 'Panama'), ('paraguay', 'Paraguay'), ('peru', 'Peru'), ('saintmartin', 'Saint Martin'), ('uruguay', 'Uruguay'), ('venezuela', 'Venezuela'))), ('Africa', (('algeria', 'Algeria'), ('angola', 'Angola'), ('benin', 'Benin'), ('botswana', 'Botswana'), ('burkinafaso', 'Burkina Faso'), ('burundi', 'Burundi'), ('cameroon', 'Cameroon'), ('canaryislands', 'Canary Islands'), ('capeverde', 'Cape Verde'), ('centralafricanrepublic', 'Central African Republic'), ('ceuta', 'Ceuta'), ('chad', 'Chad'), ('comoros', 'Comoros'), ('cotedivoire', "Côte d'Ivoire"), ('democraticrepublicofthecongo', 'Democratic Republic of the Congo'), ('djibouti', 'Djibouti'), ('egypt', 'Egypt'), ('equatorialguinea', 'Equatorial Guinea'), ('eritrea', 'Eritrea'), ('ethiopia', 'Ethiopia'), ('gabon', 'Gabon'), ('gambia', 'Gambia'), ('ghana', 'Ghana'), ('guinea', 'Guinea'), ('guinea-bissau', 'Guinea-Bissau'), ('kenya', 'Kenya'), ('lesotho', 'Lesotho'), ('liberia', 'Liberia'), ('libya', 'Libya'), ('madagascar', 'Madagascar'), ('madeira', 'Madeira'), ('malawi', 'Malawi'), ('mali', 'Mali'), ('mauritania', 'Mauritania'), ('mauritius', 'Mauritius'), ('mayotte', 'Mayotte'), ('melilla', 'Melilla'), ('morocco', 'Morocco'), ('mozambique', 'Mozambique'), ('namibia', 'Namibia'), ('niger', 'Niger'), ('nigeria', 'Nigeria'), ('republicofthecongo', 'Republic of the Congo'), ('reunion', 'Réunion'), ('rwanda', 'Rwanda'), ('sainthelena', 'Saint Helena'), ('saotomeandpríncipe', 'São Tomé and Príncipe'), ('senegal', 'Senegal'), ('seychelles', 'Seychelles'), ('sierraleone', 'Sierra Leone'), ('somalia', 'Somalia'), ('southafrica', 'South Africa'), ('sudan', 'Sudan'), ('swaziland', 'Swaziland'), ('tanzania', 'Tanzania'), ('togo', 'Togo'), ('tunisia', 'Tunisia'), ('uganda', 'Uganda'), ('westernsahara', 'Western Sahara'), ('zambia', 'Zambia'), ('zimbabwe', 'Zimbabwe'))), ('other', 'Other')], default='guatemala', max_length=100, verbose_name='Country of origin')),
            ],
            bases=('intake.asylee',),
        ),
        migrations.CreateModel(
            name='TravelPlan',
            fields=[
                ('id', hashid_field.field.HashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', min_length=7, primary_key=True, serialize=False)),
                ('confirmation', models.CharField(max_length=100, null=True, verbose_name='Confirmation #')),
                ('destination_city', models.CharField(max_length=100, null=True, verbose_name='Destination city')),
                ('destination_state', models.CharField(choices=[('al', 'Alabama'), ('ak', 'Alaska'), ('az', 'Arizona'), ('ar', 'Arkansas'), ('ca', 'California'), ('co', 'Colorado'), ('ct', 'Connecticut'), ('de', 'Delaware'), ('dc', 'Washington D.C.'), ('fl', 'Florida'), ('ga', 'Georgia'), ('hi', 'Hawaii'), ('id', 'Idaho'), ('il', 'Illinois'), ('in', 'Indiana'), ('ia', 'Iowa'), ('ks', 'Kansas'), ('ky', 'Kentucky'), ('la', 'Louisiana'), ('me', 'Maine'), ('md', 'Maryland'), ('ma', 'Massachusetts'), ('mi', 'Michigan'), ('mn', 'Minnesota'), ('ms', 'Mississippi'), ('mo', 'Missouri'), ('mt', 'Montana'), ('ne', 'Nebraska'), ('nv', 'Nevada'), ('nh', 'New Hampshire'), ('nj', 'New Jersey'), ('nm', 'New Mexico'), ('ny', 'New York'), ('nc', 'North Carolina'), ('nd', 'North Dakota'), ('oh', 'Ohio'), ('ok', 'Oklahoma'), ('or', 'Oregon'), ('pa', 'Pennsylvania'), ('pr', 'Puerto Rico'), ('ri', 'Rhode Island'), ('sc', 'South Carolina'), ('sd', 'South Dakota'), ('tn', 'Tennessee'), ('tx', 'Texas'), ('ut', 'Utah'), ('vt', 'Vermont'), ('va', 'Virginia'), ('wa', 'Washington State'), ('wv', 'West Virginia'), ('wi', 'Wisconsin'), ('wy', 'Wyoming'), ('other', 'Other')], default='other', max_length=100, verbose_name='Destination state')),
                ('travel_date', models.DateTimeField(null=True, verbose_name='Departure time of travel')),
                ('city_van_date', models.DateTimeField(null=True, verbose_name='Departure time on City Van')),
                ('travel_food_prepared', models.BooleanField(default=False, verbose_name='Is travel food prepared?')),
                ('eta', models.DateTimeField(null=True, verbose_name='Estimated arrival')),
                ('travel_mode', models.CharField(choices=[('Air', (('alaska', 'Alaska (AS)'), ('american', 'American (AA)'), ('delta', 'Delta (DL)'), ('frontier', 'Frontier (F9)'), ('jetblue', 'Jet Blue (B6)'), ('southwest', 'Southwest (WN)'), ('united', 'United (UA)'), ('airline_other', 'Other airline'))), ('Bus', (('greyhound', 'Greyhound'), ('bus_other', 'Other bus'))), ('Train', (('amtrak', 'Amtrak'),)), ('Car', (('personal_car', 'Personal car'),)), ('other', 'Other')], default='other', max_length=100, verbose_name='Mode of travel')),
                ('layovers', models.CharField(max_length=300, null=True, verbose_name='Layover(s)')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Additional notes')),
                ('flight_number', models.CharField(max_length=200, null=True, verbose_name='Flight #(s)')),
                ('arranged_by', models.ForeignKey(null=True, on_delete=models.SET(intake.models.get_sentinel_user), to='intake.profile')),
            ],
        ),
        migrations.CreateModel(
            name='RequestQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='intake.organization')),
                ('site_coordinator', models.ForeignKey(null=True, on_delete=models.SET(intake.models.get_sentinel_user), to='intake.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Medical',
            fields=[
                ('id', hashid_field.field.HashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', min_length=7, primary_key=True, serialize=False)),
                ('temperature', django_cryptography.fields.encrypt(models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Temperature ºF'))),
                ('pulse', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=20, null=True, verbose_name='Pulse'))),
                ('blood_pressure', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=20, null=True, verbose_name='Blood pressure'))),
                ('weight', django_cryptography.fields.encrypt(models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Weight (lbs)'))),
                ('height', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=20, null=True, verbose_name='Height'))),
                ('oxgyen_level', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=20, null=True, verbose_name='Oxygen level'))),
                ('vaccines_received', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=300, null=True, verbose_name='Vaccines received'))),
                ('allergies', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=200, null=True, verbose_name='Allergies'))),
                ('medications', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=200, null=True, verbose_name='Medications'))),
                ('chronic_medical_problems', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=200, null=True, verbose_name='Allergies'))),
                ('symptoms', django_cryptography.fields.encrypt(models.TextField(blank=True, null=True, verbose_name='Symptoms observed'))),
                ('diagnosis', django_cryptography.fields.encrypt(models.TextField(blank=True, null=True, verbose_name='Diagnosis'))),
                ('treatment', django_cryptography.fields.encrypt(models.TextField(blank=True, null=True, verbose_name='Treatment'))),
                ('follow_up_needed', django_cryptography.fields.encrypt(models.TextField(blank=True, null=True, verbose_name='Follow up needed'))),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Additional notes')),
                ('entered_by', models.ForeignKey(on_delete=models.SET(intake.models.get_sentinel_user), related_name='data_entry_volunteer', to='intake.profile')),
                ('provider', models.ForeignKey(on_delete=models.SET(intake.models.get_sentinel_user), related_name='medical_provider', to='intake.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', hashid_field.field.HashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', min_length=7, primary_key=True, serialize=False)),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='intake.organization')),
            ],
        ),
        migrations.AddField(
            model_name='asylee',
            name='medicals',
            field=models.ManyToManyField(to='intake.Medical', verbose_name='Medical Issues'),
        ),
        migrations.CreateModel(
            name='SiteCoordinator',
            fields=[
                ('user', models.OneToOneField(on_delete=models.SET(intake.models.get_sentinel_user), primary_key=True, serialize=False, to='intake.profile')),
                ('organization', models.ManyToManyField(null=True, to='intake.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('user', models.OneToOneField(on_delete=models.SET(intake.models.get_sentinel_user), primary_key=True, serialize=False, to='intake.profile')),
                ('specialty', models.CharField(choices=[('clothes', 'Clothes'), ('departurebags', 'Departure Bags'), ('food', 'Food'), ('hotelrunner', 'Hotel Runner'), ('intake', 'Intake'), ('medical', 'Medical'), ('travel', 'Travel'), ('transportation', 'Transportation'), ('volunteercoordinator', 'Volunteer Coordinator'), ('other', 'Other')], default='other', max_length=100, verbose_name='Team lead area')),
                ('organization', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='intake.organization')),
            ],
        ),
        migrations.AddField(
            model_name='intakebus',
            name='headsofhousehold',
            field=models.ManyToManyField(to='intake.HeadOfHousehold', verbose_name='Heads of Households'),
        ),
        migrations.AddField(
            model_name='headofhousehold',
            name='asylees',
            field=models.ManyToManyField(default=None, related_name='head_of_household', to='intake.Asylee', verbose_name='Asylees'),
        ),
        migrations.AddField(
            model_name='headofhousehold',
            name='intake_by',
            field=models.ForeignKey(null=True, on_delete=models.SET(intake.models.get_sentinel_user), to='intake.profile'),
        ),
        migrations.AddField(
            model_name='headofhousehold',
            name='languages',
            field=models.ManyToManyField(to='intake.Language', verbose_name='Languages Spoken'),
        ),
        migrations.AddField(
            model_name='headofhousehold',
            name='sponsor',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='intake.sponsor', verbose_name='Sponsors'),
        ),
        migrations.AddField(
            model_name='headofhousehold',
            name='travel_plan',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='intake.travelplan', verbose_name='Travel Plans'),
        ),
    ]
